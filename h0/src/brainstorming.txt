## components:

- constant
	- dimension (2 or 10)
	- sample number  (30)
	- number of threas

- setting
	- best improvement
	- first improvement
	- worst improvement		

- function
	- minimum
	- maximum
	- implementation

- execution
	- deterministic - not now
	- heuristic
		- hill climbing
		- simulated anneling - not now

- threads
- clock
- printer
	- results
	- error statements
	- default

- bitstring

- function to compute an some calculations for true random numbers

## theory:

- long double is not portable for every compiler
- <ranges> lib is C++2O, quite new

- mersenne prime number = prime number == 2^x - 1, x belongs to Z
- mersenne twister = random number generator, floting points number = mersenne prime number
- mt19937 
	- 2^19937 - 1
	- 32-bit word length

- implementation
	- std::mt19937
	- std::bernoulli (1/2)
	- std::thread::hardware_concurrency

- heuristic executions == 24 == 4 functions * 2 dimensions * 3 improvement types
		VS
- 4 functions * 2 dimensions * 2(min, max) * 2 improvement
	- indeed he analysed max
	- missed worst improvement case

- each execution (for him it's called setting)
	- has 30 numbers ==  30 * dimension actual numbers
	- result: arr, execution_time: arr
	- its own thread


## to do:

- understand improvement
- understand bitstring

- random number function improvement
- thread